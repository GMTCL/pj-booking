'use client';

import { useState } from 'react';
import Link from 'next/link';
import './shop-settings.css';

export default function ShopSettingsPage() {
  // Booking Conditions State
  const [maxAdvanceDays, setMaxAdvanceDays] = useState(0);
  const [maxAdvanceHours, setMaxAdvanceHours] = useState(0);
  const [maxAdvanceMinutes, setMaxAdvanceMinutes] = useState(0);
  
  const [minAdvanceDays, setMinAdvanceDays] = useState(0);
  const [minAdvanceHours, setMinAdvanceHours] = useState(0);
  const [minAdvanceMinutes, setMinAdvanceMinutes] = useState(0);
  
  const [allowCancellation, setAllowCancellation] = useState(true);
  const [minCancelDays, setMinCancelDays] = useState(0);
  const [minCancelHours, setMinCancelHours] = useState(0);
  const [minCancelMinutes, setMinCancelMinutes] = useState(0);

  // Booking Information State
  const [requireName, setRequireName] = useState(true);
  const [requirePhone, setRequirePhone] = useState(false);
  const [requireBirthday, setRequireBirthday] = useState(false);

  // Shop Contact State
  const [shopAddress, setShopAddress] = useState('');

  const handleSave = () => {
    // Handle save logic
    console.log('Settings saved');
  };

  const handleCancel = () => {
    // Handle cancel logic
    console.log('Settings cancelled');
  };

  return (
    <div className="shop-settings-page">
      {/* Header */}
      <div className="header">
        <div className="header-content">
          <h1 className="logo">PrettyQueue</h1>
          <div className="user-profile">
            <div className="profile-icon">üë§</div>
          </div>
        </div>
      </div>

      {/* Navigation */}
      <div className="navigation">
        <div className="nav-container">
          <button className="nav-arrow left">‚Äπ</button>
          <div className="nav-items">
            <Link href="/backoffice/main-dashboard" className="nav-item">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</Link>
            <Link href="/backoffice/shop" className="nav-item active">‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤</Link>
            <Link href="/backoffice/services" className="nav-item">‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</Link>
            <Link href="/backoffice/staff" className="nav-item">‡∏ä‡πà‡∏≤‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</Link>
            <Link href="/backoffice/customers" className="nav-item">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</Link>
          </div>
          <button className="nav-arrow right">‚Ä∫</button>
          <div className="nav-manage">
            <span className="manage-text">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏ß</span>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="main-content">
        <div className="content-container">
          
          {/* Booking Conditions Section */}
          <div className="settings-section">
            <div className="section-header">
              <h2 className="section-title">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h2>
              <button className="edit-button">
                <div className="edit-icon">‚úèÔ∏è</div>
              </button>
            </div>

            <div className="form-grid">
              {/* Maximum Advance Booking */}
              <div className="form-group">
                <label className="field-label">‡∏à‡∏≠‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</label>
                <div className="time-inputs">
                  <div className="time-input">
                    <span className="time-label">‡∏ß‡∏±‡∏ô</span>
                    <input
                      type="number"
                      value={maxAdvanceDays}
                      onChange={(e) => setMaxAdvanceDays(parseInt(e.target.value) || 0)}
                      className="form-input"
                    />
                  </div>
                  <div className="time-input">
                    <span className="time-label">‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</span>
                    <input
                      type="number"
                      value={maxAdvanceHours}
                      onChange={(e) => setMaxAdvanceHours(parseInt(e.target.value) || 0)}
                      className="form-input"
                    />
                  </div>
                  <div className="time-input">
                    <span className="time-label">‡∏ô‡∏≤‡∏ó‡∏µ</span>
                    <input
                      type="number"
                      value={maxAdvanceMinutes}
                      onChange={(e) => setMaxAdvanceMinutes(parseInt(e.target.value) || 0)}
                      className="form-input"
                    />
                  </div>
                </div>
              </div>

              {/* Minimum Advance Booking */}
              <div className="form-group">
                <label className="field-label">‡∏à‡∏≠‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥</label>
                <div className="time-inputs">
                  <div className="time-input">
                    <span className="time-label">‡∏ß‡∏±‡∏ô</span>
                    <input
                      type="number"
                      value={minAdvanceDays}
                      onChange={(e) => setMinAdvanceDays(parseInt(e.target.value) || 0)}
                      className="form-input"
                    />
                  </div>
                  <div className="time-input">
                    <span className="time-label">‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</span>
                    <input
                      type="number"
                      value={minAdvanceHours}
                      onChange={(e) => setMinAdvanceHours(parseInt(e.target.value) || 0)}
                      className="form-input"
                    />
                  </div>
                  <div className="time-input">
                    <span className="time-label">‡∏ô‡∏≤‡∏ó‡∏µ</span>
                    <input
                      type="number"
                      value={minAdvanceMinutes}
                      onChange={(e) => setMinAdvanceMinutes(parseInt(e.target.value) || 0)}
                      className="form-input"
                    />
                  </div>
                </div>
              </div>

              {/* Allow Cancellation */}
              <div className="form-group">
                <label className="field-label">‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</label>
              </div>

              {/* Minimum Advance Cancellation */}
              <div className="form-group">
                <label className="field-label">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥</label>
                <div className="time-inputs">
                  <div className="time-input">
                    <span className="time-label">‡∏ß‡∏±‡∏ô</span>
                    <input
                      type="number"
                      value={minCancelDays}
                      onChange={(e) => setMinCancelDays(parseInt(e.target.value) || 0)}
                      className="form-input"
                    />
                  </div>
                  <div className="time-input">
                    <span className="time-label">‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</span>
                    <input
                      type="number"
                      value={minCancelHours}
                      onChange={(e) => setMinCancelHours(parseInt(e.target.value) || 0)}
                      className="form-input"
                    />
                  </div>
                  <div className="time-input">
                    <span className="time-label">‡∏ô‡∏≤‡∏ó‡∏µ</span>
                    <input
                      type="number"
                      value={minCancelMinutes}
                      onChange={(e) => setMinCancelMinutes(parseInt(e.target.value) || 0)}
                      className="form-input"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Booking Information Section */}
          <div className="settings-section">
            <div className="section-header">
              <h2 className="section-title">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h2>
            </div>

            <div className="toggle-group">
              <div className="toggle-item">
                <label className="toggle-label-text">‡∏ä‡∏∑‡πà‡∏≠</label>
                <div className="toggle-switch">
                  <input
                    type="checkbox"
                    id="requireName"
                    checked={requireName}
                    onChange={(e) => setRequireName(e.target.checked)}
                    className="toggle-input"
                  />
                  <label htmlFor="requireName" className="toggle-label"></label>
                </div>
              </div>

              <div className="toggle-item">
                <label className="toggle-label-text">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</label>
                <div className="toggle-switch">
                  <input
                    type="checkbox"
                    id="requirePhone"
                    checked={requirePhone}
                    onChange={(e) => setRequirePhone(e.target.checked)}
                    className="toggle-input"
                  />
                  <label htmlFor="requirePhone" className="toggle-label"></label>
                </div>
              </div>

              <div className="toggle-item">
                <label className="toggle-label-text">‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</label>
                <div className="toggle-switch">
                  <input
                    type="checkbox"
                    id="requireBirthday"
                    checked={requireBirthday}
                    onChange={(e) => setRequireBirthday(e.target.checked)}
                    className="toggle-input"
                  />
                  <label htmlFor="requireBirthday" className="toggle-label"></label>
                </div>
              </div>
            </div>
          </div>

          {/* Shop Contact Section */}
          <div className="settings-section">
            <div className="section-header">
              <h2 className="section-title">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô</h2>
            </div>

            <div className="image-upload">
              <div className="upload-box">
                <div className="upload-icon">üì∑</div>
              </div>
              <div className="upload-info">‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏ô‡∏≤‡∏î : 10MB</div>
            </div>

            <div className="address-section">
              <label className="field-label">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤</label>
              <textarea
                className="address-textarea"
                value={shopAddress}
                onChange={(e) => setShopAddress(e.target.value)}
                placeholder="‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà"
                rows={4}
              />
            </div>

            {/* Footer Buttons */}
            <div className="footer-buttons">
              <button className="cancel-button" onClick={handleCancel}>
                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
              </button>
              <button className="save-button" onClick={handleSave}>
                ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
